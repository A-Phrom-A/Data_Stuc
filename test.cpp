#include <iostream>
#include <vector>
using namespace std;

class ArrayBST {
private:
    vector<int> bst;

public:
    ArrayBST(int size) : bst(size, -1) {} // ???????????????????? -1 ???????????????????????

    void insert(int value) {
        int index = 0;

        while (index < bst.size()) {
            if (bst[index] == -1) { // ???????????
                bst[index] = value;
                cout << "Inserted " << value << " at index " << index << endl;
                return;
            }

            // ??????????????????????????????????????????????
            if (value < bst[index]) { // ?????????
                index = 2 * index + 1;
            } else { // ????????
                index = 2 * index + 2;
            }
        }

        cout << "Tree is full. Cannot insert " << value << endl;
    }

    void display() {
        for (int i = 0; i < bst.size(); i++) {
            if (bst[i] != -1)
                cout << "Index " << i << ": " << bst[i] << endl;
        }
    }
};

int main() {
    ArrayBST tree(15); // ????? BST ????????????????????? 15

    tree.insert(10);
    tree.insert(5);
    tree.insert(20);
    tree.insert(3);
    tree.insert(7);
    tree.insert(15);
    tree.insert(30);

    cout << "Binary Search Tree (Array-based):" << endl;
    tree.display();

    return 0;
}

